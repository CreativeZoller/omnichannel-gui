@charset 'utf-8';
/*
 *
 *   Omnichannel Communication GUI
 *   version 0.0.1
 *
*/

/*
 * Project dependencies
*/
@import './loc-variables';
@import './loc-mixins';

/*
 * Project general stylings
*/
@import './components/buttons';
@import './components/cards';
@import './components/dialogs';
@import './components/overlays';
@import './components/tables';
@import './components/progress-bars';
@import './components/slider-toggles';
@import './components/breadcrumbs';

*::after {
  box-sizing: border-box;
}

html {
  font-family: sans-serif;
  line-height: 1.15;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(var(--black));
}

article,
aside,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: 'Open Sans', 'Helvetica Neue', Arial, sans-serif !important; // to overwrite ootstrap's reboot
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: map_get($vertican-colors, 'primary');
  text-align: left;
  background-color: var(--white);
  overflow-x: hidden;

  &.active {
    overflow-y: hidden;
    position: fixed;
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  color: var(--black);
  font-family: 'PT Sans', 'Helvetica Neue', Arial, sans-serif;
  font-weight: 600 !important; // to overwrite ootstrap's reboot
}

[tabindex='-1']:focus:not(:focus-visible) {
  outline: 0 !important;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

.text-xs {
  font-size: 0.7rem;
}

.mx-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}

.error-show {
  display: inline !important;
  font-size: 0.8rem;
  color: #dc3545;
}

.sr-only {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.invalid-feedback {
  display: block !important;
  padding: 0 15px;
}

$shades: ('100', $gray-100), ('200', $gray-200), ('300', $gray-300), ('400', $gray-400), ('500', $gray-500), ('600', $gray-600),
  ('700', $gray-700), ('800', $gray-800), ('900', $gray-900);

@each $shade in $shades {
  .text-gray-#{nth($shade,1)} {
    color: nth($shade, 2);
  }
}

@keyframes noise-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}

@keyframes noise-anim-2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}
